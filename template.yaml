AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description:  Malzoo Serverless 

Globals:
  Function:
    Timeout: 30
    Tracing: Active
    MemorySize: 128
    Timeout: 3
  
Resources:

  # ================ S3 BUCKET==================
  MalzooBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::StackName}-${AWS::AccountId}-malware"

  # ================ FUNCTIONS ==================
  DistributorFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: distributor/
      Handler: distributor.lambda_handler
      Runtime: python3.7
      Events:
        S3Event:
          Type: S3
          Properties:
            Bucket: !Ref MalzooBucket
            Events: 
              - 's3:ObjectCreated:*'
      Policies:
        - SQSSendMessagePolicy:
            QueueName: !GetAtt ExecutableQueue.QueueName
        # workaround to fix - we need enter the bucketname as a string instead of a !Ref to the object
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 's3:list*'
              Resource: !Sub "arn:aws:s3:::${AWS::StackName}-${AWS::AccountId}-malware"
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 's3:HeadObject'
                - 's3:GetObject'
              Resource: !Sub "arn:aws:s3:::${AWS::StackName}-${AWS::AccountId}-malware/*"
      Environment: 
        Variables:
          # workaround to fix - we need enter the bucketname as a string instead of a !Ref to the object
          BucketName: !Sub "${AWS::StackName}-${AWS::AccountId}-malware"
          ExecutableQ: !Ref ExecutableQueue
          Table: !Ref ResultsTable
      Layers:
        - !Ref HasherLayer
  
  SubmitAnalysisFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: submit_analysis/
      Handler: sa.lambda_handler
      Runtime: python3.8
      Policies:
        - DynamoDBCrudPolicy:
            TableName: MalzooResultsTable
        - SQSPollerPolicy:
            QueueName: !GetAtt SubmitResultsQueue.QueueName
      Environment: 
        Variables:
          QueueUrl: !Ref SubmitResultsQueue
          Table: !Ref ResultsTable
      Events:
        SQSResultsEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt SubmitResultsQueue.Arn
            BatchSize: 1

  ReturnAnalysisFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: return_analysis/
      Handler: ra.lambda_handler
      Runtime: python3.8
      Policies:
        - DynamoDBReadPolicy:
            TableName: MalzooResultsTable
      Environment:
        Variables:
          Table: !Ref ResultsTable
      Events:
        AnalysisResults:
          Type: HttpApi
          Properties:
            Path: /analysis/results/{proxy+}
            Method: get

  ExeWorkerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: exe_worker/
      Handler: ew.lambda_handler
      Runtime: python3.8
      Policies:
        # workaround to fix - we need enter the bucketname as a string instead of a !Ref to the object
        - S3CrudPolicy:
            BucketName: !Sub "${AWS::StackName}-${AWS::AccountId}-malware"
        - SQSSendMessagePolicy:
            QueueName: !GetAtt SubmitResultsQueue.QueueName
        - SQSPollerPolicy:
            QueueName: !GetAtt ExecutableQueue.QueueName
        - DynamoDBCrudPolicy:
            TableName: !Ref MalzooResultsTable
      Environment: 
        Variables:
          ResultsQueueUrl: !Ref SubmitResultsQueue
          ExeQueueUrl: !Ref ExecutableQueue
          # workaround to fix - we need enter the bucketname as a string instead of a !Ref to the object
          BucketName: !Sub "${AWS::StackName}-${AWS::AccountId}-malware"
      Events:
        SQSResultsEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt ExecutableQueue.Arn
            BatchSize: 1
      Layers:
        - !Ref HasherLayer

  # ================ LAYERS ==================
  HasherLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: hashtool
      Description: Layer to calculate Md5 and SHA-1 hash of a sample
      ContentUri: layers/hasher/
      CompatibleRuntimes:
        - python3.8
      LicenseInfo: MIT
      RetentionPolicy: retain
  
  ToolKitLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: ToolKit
      Description: Layer with multiple functions used across the Malzoo Application
      ContentUri: layers/toolkit/
      CompatibleRuntimes:
        - python3.8
      LicenseInfo: MIT
      RetentionPolicy: retain
      
  # ================ QUEUE ==================
  SubmitResultsQueue:
    Type: AWS::SQS::Queue

  ExecutableQueue:
    Type: AWS::SQS::Queue

  # ================ DYNAMODB ==================
  ResultsTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      AttributeDefinitions:
        -
          AttributeName: "md5"
          AttributeType: "S"
      KeySchema:
        -
          AttributeName: "md5"
          KeyType: "HASH"        
      BillingMode: PAY_PER_REQUEST

Outputs:
  MalzooApi:
    Description: "API Gateway endpoint URL for Prod stage for Serverless Malzoo"
    Value: !Sub "https://${ServerlessHttpApi}.execute-api.${AWS::Region}.amazonaws.com/"

  MalzooSubmitQueueURL:
    Description: "SQS Queue URL"
    Value: !Ref SubmitResultsQueue
